// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  email      String      @unique
  username   String      @unique
  name       String
  password   String
  avatar     String?
  createdAt  DateTime    @default(now())
  posts      Post[]
  savedPosts SavedPost[]
}

model Post {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  price       Int
  images      String[]
  address     String
  serviceType Type
  city        String
  phone       String
  latitude    String
  longitude   String
  createdAt   DateTime    @default(now())
  user        User        @relation(fields: [userId], references: [id])
  userId      String      @db.ObjectId
  postDetail  PostDetail?
  savedPosts  SavedPost[]
  reviews     Review[]
}

enum Type {
  Carpentry
  Plumbing
  Electrical
  Painting
  Gardening
  Cleaning
  Handyman
  HVAC
  Locksmith
  Renovation
  Roofing
  Landscaping
}

model PostDetail {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  desc         String
  email        String
  availability String?
  advance      String?
  post         Post    @relation(fields: [postId], references: [id])
  postId       String  @unique @db.ObjectId
}

model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  rating    Int
  comment   String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String   @db.ObjectId
  createdAt DateTime @default(now())
}

model SavedPost {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
  userId    String   @db.ObjectId
  postId    String   @db.ObjectId
  createdAt DateTime @default(now())

  @@unique([userId, postId])
}
